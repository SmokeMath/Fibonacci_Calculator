    /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fibonacci;

import java.text.DecimalFormat;

/**
 *
 * @author Krunkalicious
 */
public class NewJFrame extends javax.swing.JFrame {
    /**
     * Creates new form NewJFrame
     */
            
    public NewJFrame() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        rdoLoop = new javax.swing.JRadioButton();
        rdoBinet = new javax.swing.JRadioButton();
        rdoRecursion = new javax.swing.JRadioButton();
        tbInput = new javax.swing.JTextField();
        btnCalc = new javax.swing.JButton();
        lblResult = new javax.swing.JLabel();
        lblClockTime = new javax.swing.JLabel();
        fibMenu = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menuReport = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Fibonacci Sequence Calculator");

        buttonGroup2.add(rdoLoop);
        rdoLoop.setText("Loop");
        rdoLoop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoLoopActionPerformed(evt);
            }
        });

        buttonGroup2.add(rdoBinet);
        rdoBinet.setText("Binet");
        rdoBinet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoBinetActionPerformed(evt);
            }
        });

        buttonGroup2.add(rdoRecursion);
        rdoRecursion.setText("Recursion");
        rdoRecursion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoRecursionActionPerformed(evt);
            }
        });

        tbInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tbInput.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Enter Number:", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        btnCalc.setText("Calculate");
        btnCalc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcActionPerformed(evt);
            }
        });

        lblResult.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Fibonacci Result:", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

        lblClockTime.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Clock Time Taken:", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

        jMenu1.setText("File");

        menuExit.setText("Exit");
        menuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuExitActionPerformed(evt);
            }
        });
        jMenu1.add(menuExit);

        fibMenu.add(jMenu1);

        jMenu2.setText("Print");

        menuReport.setText("Print Report");
        menuReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuReportActionPerformed(evt);
            }
        });
        jMenu2.add(menuReport);

        fibMenu.add(jMenu2);

        setJMenuBar(fibMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(rdoLoop))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rdoRecursion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rdoBinet))
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                            .addComponent(lblResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblClockTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(tbInput, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(btnCalc)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoLoop)
                    .addComponent(rdoBinet)
                    .addComponent(rdoRecursion))
                .addGap(18, 18, 18)
                .addComponent(tbInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(btnCalc)
                .addGap(34, 34, 34)
                .addComponent(lblResult, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(lblClockTime, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //variable declaration:
        int input;
        double recursion;
        double loop;
        double binet;
        int n;
        int x;

        public static long fibRecursion(int n) 
        {   
            switch (n) 
            {
            case 0:
                return 0;
            case 1:
                return 1;
            default:
                return fibRecursion(n - 1) + fibRecursion(n - 2);
            }
        }
        
        public static long fibLoop(int n) 
        {
            int x = 0, y = 1, z = 1;
                for (int i = 0; i < n; i++) 
                {
                x = y;
                y = z;
                z = x + y;
                }
                    return x;
        }
            
    private void btnCalcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcActionPerformed

        input = Integer.parseInt(tbInput.getText());
        DecimalFormat df = new DecimalFormat("0"); 
        double startTime = System.nanoTime(); 
        double totalTime;
       
        if (rdoRecursion.isSelected())
        {
            n = input;
            
            recursion = fibRecursion(n);
            totalTime = System.nanoTime() - startTime;
                        
            lblResult.setText(df.format(recursion));
            lblClockTime.setText(df.format(totalTime));
        }
        
        else if (rdoLoop.isSelected ())
        {                                                    
            n = input;
            
            loop = fibLoop(n);
            totalTime = System.nanoTime() - startTime;
                        
            lblResult.setText(df.format(loop));
            lblClockTime.setText(df.format(totalTime));
        }
        
        else if (rdoBinet.isSelected ())
        {                        
            binet = (Math.pow(((1+Math.sqrt(5))/2),input)) / Math.sqrt(5); 
            totalTime = System.nanoTime() - startTime;
                   
            lblResult.setText(df.format(binet));     
            lblClockTime.setText(df.format(totalTime));    
        }
    }//GEN-LAST:event_btnCalcActionPerformed

    private void rdoRecursionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoRecursionActionPerformed
            tbInput.setText("");
            lblResult.setText("");
            lblClockTime.setText("");
    }//GEN-LAST:event_rdoRecursionActionPerformed

    private void rdoLoopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoLoopActionPerformed
            tbInput.setText("");
            lblResult.setText("");
            lblClockTime.setText("");
    }//GEN-LAST:event_rdoLoopActionPerformed

    private void rdoBinetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoBinetActionPerformed
            tbInput.setText("");
            lblResult.setText("");
            lblClockTime.setText("");
    }//GEN-LAST:event_rdoBinetActionPerformed

    private void menuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuExitActionPerformed
        System.exit (0);
    }//GEN-LAST:event_menuExitActionPerformed

    private void menuReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuReportActionPerformed
        
        if (rdoRecursion.isSelected())
        {
        String report = 
                "Fib" + "(" + (tbInput.getText()) + ")" + ":" + "             " + lblResult.getText() +
                    "\n" +
                    "\n" + "Clock Time:" + "      " + lblClockTime.getText() + " ns" +
                    "\n" +
                    "\n" + "Method Used:" + "  " + "Recursion" ;
                
        FibReport newframe = new FibReport(report);
        newframe.setVisible(true);
        }
        
        else if (rdoLoop.isSelected())
        {
        String report = 
                "Fib" + "(" + (tbInput.getText()) + ")" + ":" + "             " + lblResult.getText() +
                    "\n" +
                    "\n" + "Clock Time:" + "      " + lblClockTime.getText() + " ns" +
                    "\n" +
                    "\n" + "Method Used:" + "  " + "Loop" ;                
        
        FibReport newframe = new FibReport(report);
        newframe.setVisible(true);
        }
        
        else if (rdoBinet.isSelected())
        {
        String report = 
                "Fib" + "(" + (tbInput.getText()) + ")" + ":" + "             " + lblResult.getText() +
                    "\n" +
                    "\n" + "Clock Time:" + "      " + lblClockTime.getText() + " ns" +
                    "\n" +
                    "\n" + "Method Used:" + "  " + "Binet Formula" ;                        
        
        FibReport newframe = new FibReport(report);
        newframe.setVisible(true);
        }        
    }//GEN-LAST:event_menuReportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) 
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        //</editor-fold>
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });                 
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalc;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JMenuBar fibMenu;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JLabel lblClockTime;
    private javax.swing.JLabel lblResult;
    private javax.swing.JMenuItem menuExit;
    private javax.swing.JMenuItem menuReport;
    private javax.swing.JRadioButton rdoBinet;
    private javax.swing.JRadioButton rdoLoop;
    private javax.swing.JRadioButton rdoRecursion;
    private javax.swing.JTextField tbInput;
    // End of variables declaration//GEN-END:variables
}
